apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:25.0.0'
    implementation 'com.android.support:recyclerview-v7:25.0.0'
    implementation 'com.android.support:support-annotations:22.2.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'com.github.bumptech.glide:glide:4.0.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'org.greenrobot:greendao:3.2.2'
}

//View ＞ Tool Windows ＞ Gradle ＞ module名称 ＞ Tasks ＞  other ＞ exportJar 执行生成jar包
task deleteOldJar(type: Delete) {
    delete 'build/outputs/commonLeimo.jar'    //如果存在jar则删除掉
}

task exportJar(type: Copy) {
    from('build/intermediates/bundles/release/')   //jar文件来源
    into('build/outputs/')    //生成路径
    include('classes.jar')
    rename('classes.jar', 'commonLeimo.jar')  //命名为test.jar这里根据需要自己定义
}

exportJar.dependsOn(deleteOldJar, build)
